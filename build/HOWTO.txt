NOTE: <VIDIOT_DIR> is the dir in which all 'vidiot' work is done.
      <VIDIOT_SRC> is the subdir of that dir in which the sources are.
      
NOTE: The MingW/GCC stuff compiles and links. However it doesn't produce
      a working executable (crashes upon startup). Anyway, this allows for
      checing compatibility with GCC.

================ ENVIRONMENT VARIABLE ================
* set VIDIOT_DIR=D:\Vidiot (example) system level variable to the absolute
  path containing all sources/builds/included libraries for building
* set VIDIOT_COMPILE_SINGLETHREADED to 1 to disable parallel compilation

================ VISUAL STUDIO ================
* Install MSVS2010
* Install MSVS2010 SP1
* Set Tabs to 4 spaces, via Tools
* NOTE: Ensure to install with the runtimes (for packaging)
* NOTE: Install and set environment variables (vcvars) for cmake
* NOTE: Enable Tools (for wxwindows)
* Use regex "^~(:Wh@//.+)~(:Wh@\{:Wh@)~(:Wh@\}:Wh@)~(:Wh@/#).+" in search in files dialog to count lines of code..
* Install CodeMaid plugin
  - Disable remove blank lines after opening brace
  - Disable remove blank lines before closing brace
* Install <VIDIOT_SRC>/build/VisualStudioAddin
  - Install Microsoft Visual Studio 2010 SP1 SDK from
    http://www.microsoft.com/download/en/details.aspx?id=21835
  - Build VisualStudioAddin
  - Add <VIDIOT_SRC>\build\VisualStudioAddin\bin\Release to AddIn paths
    via Tools->Options->Addin/macro security

=================== CMAKE ===================
Install cmake into c:\Program Files

=================== DOXYGEN ===================
Install doxygen into c:\Program Files

=================== GRAPHVIZ ===================
(obsolete) Install graphviz into c:\Program Files

=================== CxxTest ===================
Install CxxTest into <VIDIOT_DIR>\CxxTest (cxxtest, docs and sample are subdirs of CxxTest)
Install ActivePerl via installer

========== MSYS + MINGW + CODEBLOCKS ==========
* Install Code::Blocks, including MingW
* Add C:\Program Files (x86)\CodeBlocks\MinGW\bin to PATH
  (for wxwidgets: http://wiki.codeblocks.org/index.php?title=WxWindowsQuickRef)
* In code blocks set make executable to
  C:\Program Files (x86)\CodeBlocks\MinGW\bin\mingw32-make.exe
  Otherwise code::blocks won't find make, and simply renaming the file to make.exe
  will cause the build of other MSys-MingW stuff to break.
* Install msys (1.0.11) into c:/Msys
  http://sourceforge.net/projects/mingw/files/MSYS/
* C:\Msys\1.0\etc\fstab: map /mingw to C:/Progra~2/CodeBlocks/MinGW
  (==C:\Program Files (x86)\CodeBlocks\MinGW)
* Msys:
  For soundtouch add
  - automake
  - autoconf
  - perl
  - libcrypt
  - m4 (newer version which has the --gnu option)
  - libtool
* For ffmpeg add
  - coreutils-5.97-MSYS-1.0.11: extract pr.exe
  (Note: ffmpeg binaries not working)

================== VERSION CONTROL  ================
* Install SVN (tortoise) from 
  http://tortoisesvn.net/downloads.html
  NOTE: Also install the command line tools!

=================== VIDIOT ===================
* Checkout Vidiot into <VIDIOT_SRC>
  Example: VIDIOT_DIR=D:\Vidiot, VIDIOT_SRC=D:\Vidiot\vidiot_trunk
  (Repo: https://svn.code.sf.net/p/vidiot/code/trunk)

=================== BOOST ===================
* Download Boost into <VIDIOT_DIR>\boost_1_xx_y
* CMD:
  - d:
  - cd <VIDIOT_DIR>\boost_1_xx_y
  - bootstrap
  - (MSVC) .\bjam --toolset=msvc --build-type=complete stage
  - (GCC) .\bjam --toolset=gcc --build-type=complete stage

=================== WXWIDGETS ===================
* Checkout http://svn.wxwidgets.org/svn/wx/wxWidgets/trunk into <VIDIOT_DIR>\wxwidgets_trunk
* Copy include/wx/msw/setup0.h to setup.h
* Copy include/wx/msw/setup0.h to include/wx/setup.h
* Clean <VIDIOT_DIR>\wxwidgets_trunk\lib\vc_lib (particularly, remove all setup.h files)
* Apply patch to wxUIActionSimulator::MouseMove: (NOTE: No longer required!)
  (see <VIDIOT_SRC>/build/patches)
    int scaledx = std::ceil((float)x * 65535.0 / (displayx-1));
    int scaledy = std::ceil((float)y * 65535.0 / (displayy-1));
* Apply patch to wxFSWatcher
  (see <VIDIOT_SRC>/build/patches)
  http://trac.wxwidgets.org/ticket/13294
* (MSVC) build solution Release & Debug
* (GCC)
  - cd <wxWidgets>\build\msw
  - mingw32-make -f makefile.gcc BUILD=release SHARED=1 MONOLITHIC=0 UNICODE=1 USE_QA=1
  - mingw32-make -f makefile.gcc BUILD=debug SHARED=1 MONOLITHIC=0 UNICODE=1 USE_QA=1
  (cmake requires both debug and release)
* Set env variable wxWidgets_ROOT_DIR=<VIDIOT_DIR>\wxwidgets_trunk
* Note: install visual studio 2008 with c++ tools (not the
  various "sub"-tools under c++ tools) to avoid rc.exe problem when compiling.
* (GCC) Add <VIDIOT_DIR>\wxwidgets_trunk\lib\gcc_dll to the path

=================== FFMPEG ===================
* Download from http://ffmpeg.zeranoe.com/builds/:
  - 32-bit Builds (Shared)
  - 32-bit Builds (Dev)
* Extract into
  <VIDIOT_DIR>\ffmpeg-precomiled
  (bin/doc/lib/include/licenses etc. are direct subdirs of ffmpeg-precompiled)
* The steps below are how I tried compiling. However, it 'suddenly' stopped
  working; resulting in an avutil.dll that - when loaded - caused a 0x00000005
  error (both when using gcc and msdev). See
  - http://ffmpeg.arrozcru.org/wiki/index.php?title=Introduction and follow the instructions
  - http://ffmpeg.arrozcru.org/wiki/index.php?title=Get_build_instructions_from_the_apt_repository
  - Create folder <VIDIOT_DIR>\ffmpeg_trunk
  - checkout svn://svn.ffmpeg.org/ffmpeg/trunk into that dir
  - Add: call "C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\vcvars32.bat" to C:\MSys\1.0\msys.bat
  - In Msys: Run lib.exe (MS tool) to check if everything is ok (if ok --> help message is shown)
  - cd <VIDIOT_DIR>/ffmpeg_trunk ; rm -rf bin ; rm -rf build ; make distclean ; mkdir bin ; mkdir build ; cd build
  -  ../configure --enable-shared --enable-memalign-hack --libdir=../bin --shlibdir=../bin ; make ; make install

=================== PORTAUDIO ===================
* Create folder <VIDIOT_DIR>\portaudio_trunk
* checkout https://www.portaudio.com/repos/portaudio/trunk into that dir
* Install MS DirectX SDK
* (MSVC)
  - Open portaudio_trunk\build\msvc\portaudio.sln (convert if needed)
  - Adjust solution:
    + Define NO_ASIO (Project->Properties->Preprocessor defined - /D )
    + Define NO_WASAPI
    PA_USE_ASIO=0
PA_USE_WASAPI=0

PA_USE_ASIO
PA_USE_DS (DirectSound)
PA_USE_WMME (MME)
PA_USE_WASAPI
PA_USE_WDMKS
PA_USE_SKELETON 
set all to 0 except ds
TODO BUILD WITH LATEST FILES FROM PORTAUDIO!!!
C

/C++ -> Optimization -> Omit frame pointers = Yes

C/C++ -> Code Generation -> Runtime library = /MT

Optional: C/C++ -> Code Generation -> Floating point model = fast 
    + Remove ASIO files from project
    + Remove hostapi/wasapi files
    + Remove ..wasapi.. lines from portaudio.def
    + Remove ..asio.. lines from portaudio.def
    + add C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)\Include to the include paths
    + add C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)\Lib\x86 to the linker "additional library directories"
  - Build
* (GCC)
  - MSys: cd <VIDIOT_DIR>/portaudio_trunk ; ./configure --prefix=/d/Vidiot/portaudio_trunk/build/msys ; make ; make install

=================== SOUNDTOUCH ===================
* Create folder  <VIDIOT_DIR>\soundtouch_trunk
* Checkout https://soundtouch.svn.sourceforge.net/svnroot/soundtouch/trunk into that dir
* edit include/STTypes.h -> #define INTEGER_SAMPLES     1    //< 16bit integer samples
* (MSVC)
  - Open SoundTouchDll solution (convert if needed).
  - For all configurations change /MT[d] to /MD[d]
  - Exclude SoundTouch.rc from project (doesn't build)
  - Build
* (GCC)
  MSys: cd soundtouch_trunk ; ./bootstrap ; ./configure --enable-integer-samples; make ; make install
* (GCC) Copy soundtouch libs from C:\MSys\1.0\local\lib to D:\Vidiot\soundtouch_trunk\lib:
  libSoundTouch.a
  libSoundTouch.la
* removed in soundtouch the if statement for #ifdef _GCC that includes some config.h file

=================== INSTALLER ===================
* Install NSIS
* Copy build/FileAssoc.nsh into "C:\Program Files (x86)\NSIS\Include"

=================== BUILD ===================
* Run <VIDIOT_SRC>/build/RunCMake.bat

=================== RUN TESTS ===================
* Ensure to have set environment variable VIDIOT_DIR
* Copy test files into <VIDIOT_DIR>/test