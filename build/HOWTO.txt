NOTE: <VIDIOT_DIR> is the dir in which all 'vidiot' work is done.

NOTE: The MingW/GCC stuff compiles and links. However it doesn't produce
      a working executable (crashes upon startup). Anyway, this allows for
      checing compatibility with GCC.

=================== CMAKE ===================
Install cmake into c:\Program Files

=================== DOXYGEN ===================
Install doxygen into c:\Program Files

=================== GRAPHVIZ ===================
Install graphviz into c:\Program Files

=================== CxxTest ===================
Install CxxTest into C:\Program Files (x86)\CxxTest

========== MSYS + MINGW + CODEBLOCKS ==========
* Install Code::Blocks, including MingW
* Add C:\Program Files (x86)\CodeBlocks\MinGW\bin to PATH
  (for wxwidgets: http://wiki.codeblocks.org/index.php?title=WxWindowsQuickRef)
* In code blocks set make executable to
  C:\Program Files (x86)\CodeBlocks\MinGW\bin\mingw32-make.exe
  Otherwise code::blocks won't find make, and simply renaming the file to make.exe
  will cause the build of other MSys-MingW stuff to break.
* Install msys (1.0.11) into c:/Msys
  http://sourceforge.net/projects/mingw/files/MSYS/
* C:\Msys\1.0\etc\fstab: map /mingw to C:/Progra~2/CodeBlocks/MinGW
  (==C:\Program Files (x86)\CodeBlocks\MinGW)
* Msys:
  For soundtouch add
  - automake
  - autoconf
  - perl
  - libcrypt
  - m4 (newer version which has the --gnu option)
  - libtool
* For ffmpeg add
  - coreutils-5.97-MSYS-1.0.11: extract pr.exe
  (Note: ffmpeg binaries not working)

=================== VIDIOT ===================
* Checkout Vidiot into <VIDIOT_DIR>
  Example (VIDIOT_DIR=D:\Vidiot): D:\Vidiot\vidiot_trunk
  (Repo: https://vidiot.svn.sourceforge.net/svnroot/vidiot)

=================== BOOST ===================
* Download Boost into <VIDIOT_DIR>\boost_1_xx_y
* CMD:
  - d:
  - cd <VIDIOT_DIR>\boost_1_xx_y
  - bootstrap
  - (MSVC) .\bjam --toolset=msvc --build-type=complete stage
  - (GCC) .\bjam --toolset=gcc --build-type=complete stage
* Add  <VIDIOT_DIR>\boost_1_xx_y\stage\lib to system/user path variable

=================== WXWIDGETS ===================
* Checkout wxWidgets into <VIDIOT_DIR>\wxwidgets_trunk
* Copy include/wx/msw/setup0.h to setup.h
  (I had to change platform.h include of this file to wx/msw/setup.h)
  - #define wxUSE_ON_FATAL_EXCEPTION 1
  - #define wxUSE_STACKWALKER 1
  - #define wxUSE_DEBUGREPORT 1
  - #define wxUSE_CRASHREPORT 1
* (MSVC) build solution Release & Debug
* (GCC)
  - cd <wxWidgets>\build\msw
  - mingw32-make -f makefile.gcc BUILD=release SHARED=1 MONOLITHIC=0 UNICODE=1 USE_QA=1
  - mingw32-make -f makefile.gcc BUILD=debug SHARED=1 MONOLITHIC=0 UNICODE=1 USE_QA=1
  (cmake requires both debug and release)
* Set env variable wxWidgets_ROOT_DIR=<VIDIOT_DIR>\wxwidgets_trunk
* Note: install visual studio 2008 with c++ tools (not the
  various "sub"-tools under c++ tools) to avoid rc.exe problem when compiling.
* (GCC) Add <VIDIOT_DIR>\wxwidgets_trunk\lib\gcc_dll to the path

=================== FFMPEG ===================
* Download from http://ffmpeg.arrozcru.org/autobuilds/:
  - ffmpeg-r<x>-swscale-r<y>-mingw32-shared
  - ffmpeg-r<x>-swscale-r<y>-mingw32-shared-dev
* Extract both into
  <VIDIOT_DIR>\ffmpeg-precomiled
* MOVE
  <VIDIOT_DIR>/ffmpeg-precomiled/stdint.h
  <VIDIOT_DIR>/ffmpeg-precomiled/inttypes.h
  to
  <VIDIOT_DIR>/ffmpeg-ctypes
* Add <VIDIOT_DIR>\ffmpeg-precompiled\bin to system/user path variable
* Delete
  <VIDIOT_DIR>/ffmpeg-precompiled/include/libavutil/file.h

* The steps below are how I tried compiling. However, it 'suddenly' stopped
  working; resulting in an avutil.dll that - when loaded - caused a 0x00000005
  error (both when using gcc and msdev). See
  - http://ffmpeg.arrozcru.org/wiki/index.php?title=Introduction and follow the instructions
  - http://ffmpeg.arrozcru.org/wiki/index.php?title=Get_build_instructions_from_the_apt_repository
  - Create folder <VIDIOT_DIR>\ffmpeg_trunk
  - checkout svn://svn.ffmpeg.org/ffmpeg/trunk into that dir
  - Add: call "C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\vcvars32.bat" to C:\MSys\1.0\msys.bat
  - In Msys: Run lib.exe (MS tool) to check if everything is ok (if ok --> help message is shown)
  - cd <VIDIOT_DIR>/ffmpeg_trunk ; rm -rf bin ; rm -rf build ; make distclean ; mkdir bin ; mkdir build ; cd build
  -  ../configure --enable-shared --enable-memalign-hack --libdir=../bin --shlibdir=../bin ; make ; make install

=================== PORTAUDIO ===================
* Create folder <VIDIOT_DIR>\portaudio_trunk
* checkout https://www.portaudio.com/repos/portaudio/trunk into that dir
* Install MS DirectX SDK
* (MSVC)
  - Open portaudio_trunk\build\msvc\portaudio.sln (convert if needed)
  - Adjust solution:
    + Define NO_ASIO (Project->Properties->Preprocessor defined - /D )
    + Define NO_WASAPI
    + Remove ASIO files from project
    + Remove ..asio.. lines from portaudio.def
    + add C:\Program Files (x86)\Microsoft DirectX SDK (February 2010)\Include to the include paths
    + add C:\Program Files (x86)\Microsoft DirectX SDK (February 2010)\Lib\x86 to the linker "additional library directories"
  - Build
  - Add <VIDIOT_DIR>\portaudio_trunk\build\msvc\Win32\Release to system/user path variable
* (GCC)
  - MSys: cd <VIDIOT_DIR>/portaudio_trunk ; ./configure --prefix=/d/Vidiot/portaudio_trunk/build/msys ; make ; make install

=================== SOUNDTOUCH ===================
* Create folder  D:\VideoApp\InstalledLibraries\soundtouch_trunk
* Checkout https://soundtouch.svn.sourceforge.net/svnroot/soundtouch/trunk into that dir
* edit include/STTypes.h -> #define INTEGER_SAMPLES     1    //< 16bit integer samples
* (MSVC)
  - Open SoundTouchDll solution (convert if needed).
  - For all configurations change /MT[d] to /MD[d]
  - Remove resource.rc from project
  - Build
* (GCC)
  MSys: cd soundtouch_trunk ; ./bootstrap ; ./configure --enable-integer-samples; make ; make install
* (GCC) Copy soundtouch libs from C:\MSys\1.0\local\lib to D:\Vidiot\soundtouch_trunk\lib:
  libSoundTouch.a
  libSoundTouch.la
* removed in soundtouch the if statement for #ifdef _GCC that includes some config.h file


