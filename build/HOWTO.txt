NOTE: <VIDIOT_DIR> is the dir in which all 'vidiot' work is done.
      <VIDIOT_SRC> is the subdir of that dir in which the sources are.
      
================ ENVIRONMENT VARIABLE ================
* set VIDIOT_DIR=C:\Vidiot (example) system level variable to the absolute
  path containing all sources/builds/included libraries for building
* set VIDIOT_COMPILE_SINGLETHREADED to 1 to disable parallel compilation

================ VISUAL STUDIO ================
* Install MSVS2012
* Set Tabs to 4 spaces, via Tools
* NOTE: Ensure to install with the runtimes (for packaging)
* NOTE: Install and set environment variables (vcvars) for cmake
* NOTE: Enable Tools (for wxwindows)
* Use regex "^~(:Wh@//.+)~(:Wh@\{:Wh@)~(:Wh@\}:Wh@)~(:Wh@/#).+" in search in files dialog to count lines of code..
* Install CodeMaid plugin
  - Disable remove blank lines after opening brace
  - Disable remove blank lines before closing brace
* Install <VIDIOT_SRC>/build/VisualStudioAddin
  - Install Microsoft Visual Studio SDK
  - Build VisualStudioAddin
  - Add <VIDIOT_SRC>\build\VisualStudioAddin\bin\Release to AddIn paths
    via Tools->Options->Addin/macro security
* Access violations check:
  - gflags is part of WinDDK or available from 
    http://rxwen.blogspot.ca/2010/04/standalone-windbg-v6120002633.html
  - enable: gflags /p /enable Vidiot.exe /full
  - disable: gflags /p /disable Vidiot.exe
  - Or: use AppVerifier

=================== CMAKE ===================
Install cmake into c:\Program Files

=================== CxxTest ===================
Install CxxTest into <VIDIOT_DIR>\CxxTest (cxxtest, docs and sample are subdirs of CxxTest)
Install ActivePerl via installer

================== VERSION CONTROL  ================
* Install SVN (tortoise) from http://tortoisesvn.net/downloads.html
  NOTE: Also install the command line tools!

=================== VIDIOT ===================
* Checkout Vidiot into <VIDIOT_SRC>
  Example: VIDIOT_DIR=D:\Vidiot, VIDIOT_SRC=D:\Vidiot\vidiot_trunk
  (Repo: https://svn.code.sf.net/p/vidiot/code/trunk)

=================== BOOST ===================
* Download Boost into <VIDIOT_DIR>\boost_1_xx_y
* CMD:
  - cd <VIDIOT_DIR>\boost_1_xx_y
  - bootstrap
  - (MSVC) .\bjam --toolset=msvc --build-type=complete stage
 
=================== WXWIDGETS ===================
* Checkout http://svn.wxwidgets.org/svn/wx/wxWidgets/trunk into <VIDIOT_DIR>\wxwidgets_trunk
* Copy include/wx/msw/setup0.h to setup.h
* Clean <VIDIOT_DIR>\wxwidgets_trunk\lib\vc_lib (particularly, remove all setup.h files)
* Apply dcbufcmn.cpp.patch patch to wxBufferedPaintDC 
  http://trac.wxwidgets.org/ticket/15497
  (without this patch, the 'shift' handling in Timeline::onPaint becomes awkward - use shift begin trim 'to the right' to see the effect of omitting it.)
* Apply patch to wxFSWatcher
  (see <VIDIOT_SRC>/build/patches)
  http://trac.wxwidgets.org/ticket/13294
* (MSVC) build solution Release & Debug
* Copy build/__FindwxWidgets.cmake to C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindwxWidgets.cmake
  (to provide support for wxwidgets 3.0 version)

=================== FFMPEG ===================
* Nothing required: ffmpeg is part of the source tree.
  To upgrade, from http://ffmpeg.zeranoe.com/builds/
  Download 32-bit Builds (Shared and Dev) into <SRC>/ffmpeg

=================== PORTAUDIO ===================
* Create folder <VIDIOT_DIR>\portaudio_trunk
* Checkout https://subversion.assembla.com/svn/portaudio/trunk into that dir
* Open cmake-gui (see http://portaudio.com/docs/v19-doxydocs/compile_windows.html)
* Browse Source: <VIDIOT_DIR>\portaudio_trunk for 'source files'
* Browse Build:  <VIDIOT_DIR>\portaudio_build
* Configure
* Unselect all options except
  - link with static runtime
  - unicode 
  - use_ds
* Generate
* Open solution
* In preprocessor options: add PA_WDMKS_NO_KSGUID_LIB (both for debug and release)
* Build  

/C++ -> Optimization -> Omit frame pointers = Yes
C/C++ -> Code Generation -> Runtime library = /MT
Optional: C/C++ -> Code Generation -> Floating point model = fast 

=================== SOUNDTOUCH ===================
* Create folder  <VIDIOT_DIR>\soundtouch_trunk
* Checkout http://svn.code.sf.net/p/soundtouch/code/trunk into that dir
* edit include/STTypes.h -> #define SOUNDTOUCH_INTEGER_SAMPLES     1    //< 16bit integer samples
* (MSVC)
  - Open SoundTouchDll solution (convert if needed).
  - For all configurations change /MT[d] to /MD[d]
  - Exclude SoundTouchDll.rc from project (doesn't build)
  - Build

=================== SAXON ==================
* Saxon is used for creating a revision history from the svn xml output
* https://sourceforge.net/projects/saxon/files/Saxon-HE/9.4/SaxonHE9-4-0-9N-setup.exe/download

=================== INSTALLER ===================
* Install NSIS
* Copy build/FileAssoc.nsh into "C:\Program Files (x86)\NSIS\Include"

=================== BUILD ===================
* Run <VIDIOT_SRC>/build/RunCMake.bat

=================== MAKE RELEASE ===================
* Run both Debug and Release tests
* Update version number
  - In main/install/CMakeLists.txt update version number
    (commit, remember revision number)
  - In build/make_readme.xslt, add line for version and "revision number + 1"
  - Commit make_readme.xslt
* RunCleanAndMakePackage.bat
  - Runs 'svn update'
    (for correct svn information in the about box)
  - Updates BUILDDIR/VersionHistory.txt
  - Builds installer (RelWithDebInfo)
  - Run installer and test to verify
* Upload
  - Installer
  - VersionHistory.txt