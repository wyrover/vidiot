#ifndef FIXTURE_GUI_H
#define FIXTURE_GUI_H

#include <wx/window.h>
#include <boost/thread.hpp>
#include "IEventLoopListener.h"

namespace test {

/// Fixture for the complete GUI. The complete application is started, with the
/// main thread running in another thread so that tests can be ran from the main
/// application thread. This fixture also ensures that the test execution waits 
/// until that event loop is running.
class FixtureGui
    :   public IEventLoopListener
{
public:

    //////////////////////////////////////////////////////////////////////////
    // INITIALIZATION
    //////////////////////////////////////////////////////////////////////////

    FixtureGui();
    virtual ~FixtureGui();

    //////////////////////////////////////////////////////////////////////////
    // IEventLoopListener
    //////////////////////////////////////////////////////////////////////////

    void onEventLoopEnter();

    //////////////////////////////////////////////////////////////////////////
    // HELPER METHODS
    //////////////////////////////////////////////////////////////////////////

    static void triggerMenu(int id);
    static void triggerMenu(wxWindow& window, int id);
    static void waitForIdle();

private:

    //////////////////////////////////////////////////////////////////////////
    // MEMBERS
    //////////////////////////////////////////////////////////////////////////

    boost::scoped_ptr<boost::thread> mThread;
    boost::mutex mMutex;
    boost::condition_variable mCondition;

    //////////////////////////////////////////////////////////////////////////
    // WXWIDGETS MAIN THREAD
    //////////////////////////////////////////////////////////////////////////

    void thread();
};

} // namespace

#endif // FIXTURE_GUI_H