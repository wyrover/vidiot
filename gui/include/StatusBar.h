#ifndef STATUSBAR_H
#define STATUSBAR_H

#include "UtilSingleInstance.h"

namespace worker {
    class WorkerQueueSizeEvent;
}

namespace gui {

class StatusBar
    :   public wxStatusBar
    ,   public SingleInstance<StatusBar>
{
public:

    //////////////////////////////////////////////////////////////////////////
    // INITIALIZATION
    //////////////////////////////////////////////////////////////////////////

    StatusBar(wxWindow *parent);
    virtual ~StatusBar();

    //////////////////////////////////////////////////////////////////////////
    // GUI EVENTS
    //////////////////////////////////////////////////////////////////////////

    void onSize(wxSizeEvent& event);

    //////////////////////////////////////////////////////////////////////////
    // WORKER EVENTS
    //////////////////////////////////////////////////////////////////////////

    void onWorkerQueueSize(worker::WorkerQueueSizeEvent& event);

    //////////////////////////////////////////////////////////////////////////
    // GET/SET
    //////////////////////////////////////////////////////////////////////////

    int getNumberOfStatusBars() const;
    void setDebugText(wxString text = "");
    void setProcessingText(wxString text = "");
    void setQueueText(wxString text = "");
    void showProgressBar(int max);
    void showProgress(int value);
    void hideProgressBar();

private:

    //////////////////////////////////////////////////////////////////////////
    // MEMBERS
    //////////////////////////////////////////////////////////////////////////

    wxGauge* mProgress;

};

} // namespace

#endif // STATUSBAR_H