#ifndef COMMAND_PROCESSOR_H
#define COMMAND_PROCESSOR_H

#include "UtilSingleInstance.h"

namespace model {

class CommandProcessor
    :   public wxCommandProcessor
    ,   public SingleInstance<CommandProcessor>
{
public:

    //////////////////////////////////////////////////////////////////////////
    // INITIALIZATION
    //////////////////////////////////////////////////////////////////////////

    CommandProcessor();
    ~CommandProcessor();

    //////////////////////////////////////////////////////////////////////////
    // wxCommandProcessor
    //////////////////////////////////////////////////////////////////////////

    bool Redo() override;
    bool Submit (wxCommand *command, bool storeIt=true) override;
    bool Undo() override;

    //////////////////////////////////////////////////////////////////////////
    // GET/SET
    //////////////////////////////////////////////////////////////////////////

    int getUndoSize() const; ///< \return maximum number of Undos that is currently possible

private:

    //////////////////////////////////////////////////////////////////////////
    // MEMBERS
    //////////////////////////////////////////////////////////////////////////

    int mUndoSize; ///< Maximum number of Undos that is currently possible
};

} // namespace

#endif // COMMAND_PROCESSOR_H