#ifndef PROPERTIES_H
#define PROPERTIES_H

#include <boost/serialization/version.hpp>
#include <boost/serialization/access.hpp>
#include "FrameRate.h"

namespace model {

class Properties
{
public:

    //////////////////////////////////////////////////////////////////////////
    // INITIALIZATION
    //////////////////////////////////////////////////////////////////////////

    Properties();
    ~Properties();

    //////////////////////////////////////////////////////////////////////////
    // GET/SET
    //////////////////////////////////////////////////////////////////////////

    FrameRate getFrameRate();

private:

    FrameRate mFrameRate;

    //////////////////////////////////////////////////////////////////////////
    // SERIALIZATION 
    //////////////////////////////////////////////////////////////////////////

    friend class boost::serialization::access;
    template<class Archive>
    void serialize(Archive & ar, const unsigned int version);
};

} // namespace

BOOST_CLASS_VERSION(model::Properties, 1)

#endif PROPERTIES_H
