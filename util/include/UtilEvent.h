#ifndef UTIL_EVENT_H
#define UTIL_EVENT_H

#include <wx/event.h>

/// Implemented with a macro instead of a template, since I wasn't able
/// to use the event enum. It isn't const at compile time,
/// since it's generated by wxNewEventType().
///
/// In case of
/// warning C4717: 'gui::operator<<' : recursive on all control paths, function will cause runtime stack overflow
/// ensure that
/// std::ostream& operator<<( std::ostream& os, const objecttype& obj )
/// is defined.

#define DECLARE_EVENT(enumname, classname, objecttype)                                  \
    class classname : public wxEvent                                                    \
    {                                                                                   \
    public:                                                                             \
        classname(objecttype value);                                                    \
        classname(const classname& other);                                              \
        virtual wxEvent* Clone() const;                                                 \
        objecttype getValue() const;                                                    \
    private:                                                                            \
        friend std::ostream& operator<<( std::ostream& os, const classname& obj );      \
        objecttype mValue;                                                              \
    };                                                                                  \
    wxDECLARE_EVENT(enumname, classname);

#define DEFINE_EVENT(enumname, classname, objecttype)                                   \
    classname::classname(objecttype value)                                              \
    :   wxEvent(wxID_ANY, enumname)                                                     \
    ,   mValue(value)                                                                   \
    {}                                                                                  \
    classname::classname(const classname& other)                                        \
    :   wxEvent(other)                                                                  \
    ,   mValue(other.mValue)                                                            \
    {}                                                                                  \
    wxEvent* classname::Clone() const                                                   \
    {                                                                                   \
        return new classname(*this);                                                    \
    }                                                                                   \
    objecttype classname::getValue() const                                              \
    {                                                                                   \
        return mValue;                                                                  \
    }                                                                                   \
    std::ostream& operator<<( std::ostream& os, const classname& obj )                  \
    {                                                                                   \
        os << &obj << '|' << obj.getValue();                                            \
        return os;                                                                      \
    }                                                                                   \
    wxDEFINE_EVENT(enumname, classname);

#endif // UTIL_EVENT_H