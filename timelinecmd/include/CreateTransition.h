#ifndef CREATE_TRANSITION_H
#define CREATE_TRANSITION_H

#include "AClipEdit.h"
#include "Enums.h"

namespace gui { namespace timeline { namespace command {

class CreateTransition
    :   public AClipEdit
{
public:

    //////////////////////////////////////////////////////////////////////////
    // INITIALIZATION
    //////////////////////////////////////////////////////////////////////////

    CreateTransition(model::SequencePtr sequence, model::IClipPtr clip, model::TransitionPtr transition, model::TransitionType type);

    ~CreateTransition();

    //////////////////////////////////////////////////////////////////////////
    // ACLIPEDIT INTERFACE
    //////////////////////////////////////////////////////////////////////////

    void initialize() override;

    //////////////////////////////////////////////////////////////////////////
    // GET/SET
    //////////////////////////////////////////////////////////////////////////

    /// Determine if a transition is possible
    bool isPossible();

    model::IClipPtr getLeftClip() const;
    model::IClipPtr getRightClip() const;

    pts getLeftSize() const;
    pts getRightSize() const;

private:

    //////////////////////////////////////////////////////////////////////////
    // MEMBERS
    //////////////////////////////////////////////////////////////////////////

    model::TransitionPtr mTransition;

    model::IClipPtr mLeft;
    model::IClipPtr mRight;

    pts mLeftSize;
    pts mRightSize;

    //////////////////////////////////////////////////////////////////////////
    // LOGGING
    //////////////////////////////////////////////////////////////////////////

    friend std::ostream& operator<<( std::ostream& os, const CreateTransition& obj );
};

}}} // namespace

#endif // CREATE_TRANSITION_H