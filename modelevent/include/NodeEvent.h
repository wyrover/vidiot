#ifndef PROJECT_VIEW_NODE_EVENT_H
#define PROJECT_VIEW_NODE_EVENT_H

#include "UtilEvent.h"

namespace model {

class ParentAndChildren
{
public:

    //////////////////////////////////////////////////////////////////////////
    // INITIALIZATION
    //////////////////////////////////////////////////////////////////////////

    ParentAndChildren(NodePtr parent, NodePtrs children);
    ParentAndChildren(NodePtr parent, NodePtr child);

    //////////////////////////////////////////////////////////////////////////
    // GET/SET
    //////////////////////////////////////////////////////////////////////////

    NodePtr getParent() const;
    NodePtrs getChildren() const;
    NodePtr getChild() const; ///< May only be called for the events that indicate that 1 and only one child has been changed

private:

    //////////////////////////////////////////////////////////////////////////
    // MEMBERS
    //////////////////////////////////////////////////////////////////////////

    NodePtr mParent;
    NodePtrs mChildren;

    //////////////////////////////////////////////////////////////////////////
    // LOGGING
    //////////////////////////////////////////////////////////////////////////

    friend std::ostream& operator<<( std::ostream& os, const ParentAndChildren& obj );

};

DECLARE_EVENT(EVENT_ADD_NODE,      EventAddNode,      ParentAndChildren);
DECLARE_EVENT(EVENT_ADD_NODES,     EventAddNodes,     ParentAndChildren);
DECLARE_EVENT(EVENT_REMOVE_NODE,   EventRemoveNode,   ParentAndChildren);
DECLARE_EVENT(EVENT_REMOVE_NODES,  EventRemoveNodes,  ParentAndChildren);

class NodeWithNewName
{
public:

    //////////////////////////////////////////////////////////////////////////
    // INITIALIZATION
    //////////////////////////////////////////////////////////////////////////

    NodeWithNewName( NodePtr node, wxString name);

    //////////////////////////////////////////////////////////////////////////
    // GET/SET
    //////////////////////////////////////////////////////////////////////////

    NodePtr getNode() const;
    wxString getName() const;

private:

    //////////////////////////////////////////////////////////////////////////
    // MEMBERS
    //////////////////////////////////////////////////////////////////////////

    NodePtr mNode;
    wxString mName;

    //////////////////////////////////////////////////////////////////////////
    // LOGGING
    //////////////////////////////////////////////////////////////////////////

    friend std::ostream& operator<<( std::ostream& os, const NodeWithNewName& obj );

};

DECLARE_EVENT(EVENT_RENAME_NODE,   EventRenameNode,   NodeWithNewName);

} // namespace

#endif // PROJECT_VIEW_NODE_EVENT_H